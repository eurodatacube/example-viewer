{"version":1,"kind":"Notebook","sha256":"b72780245b4da5f3c320e0ebef0f4c1005f0491401965745f8459cf35b63c4b8","slug":"external-notebooks.eurodatacube.notebooks.notebooks.contributions.no2-so2-trend-veda-api-igarss-2023","location":"/external_notebooks/eurodatacube/notebooks/notebooks/contributions/no2-so2-trend-veda-api-igarss-2023.ipynb","dependencies":[],"frontmatter":{"title":"Using the NASA VEDA EOAPI","content_includes_title":false,"kernelspec":{"name":"python3","display_name":".venv","language":"python"},"github":"https://github.com/eurodatacube/example-viewer","subject":"Euro Data Cube Examples","numbering":{"title":{"offset":5}},"edit_url":"https://github.com/eurodatacube/example-viewer/blob/main/external_notebooks/eurodatacube/notebooks/notebooks/contributions/no2-so2-trend-veda-api-igarss-2023.ipynb","exports":[{"format":"ipynb","filename":"no2-so2-trend-veda-api-igarss-2023.ipynb","url":"/example-viewer/build/no2-so2-trend-veda-a-31d8cdf2a15527353d5ca0ec52b35a30.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook is divided into two parts, each demonstrating the functionalities of the VEDA Earth Observation API (EOAPI).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KrtzutCvAA"}],"key":"KE0tX1Wsqn"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Reading and visualizing one of the datasets from the VEDA data catalog","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"xasdYPqYsB"}],"key":"ASdUPbxsOu"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Using the EOAPI to generate a time-series of OMI (ozone monitoring instrument) NO₂ and SO₂ datasets","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"peiMSxFQED"}],"key":"RgfkViUV4S"}],"key":"m4vcyd4fu0"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Author: Slesa Adhikari","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"A1WuxAfzll"}],"key":"PfXADqt6Qf"}],"key":"Ja83vhCg8V"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"1. Reading and visualizing one of the datasets from the VEDA data catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ENxK9qxCzj"}],"identifier":"id-1-reading-and-visualizing-one-of-the-datasets-from-the-veda-data-catalog","label":"1. Reading and visualizing one of the datasets from the VEDA data catalog","html_id":"id-1-reading-and-visualizing-one-of-the-datasets-from-the-veda-data-catalog","implicit":true,"key":"gqosWNrA6t"}],"key":"lyS1Xc02ZS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import all the necesssary libraries","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PLOsXC2aHv"}],"key":"Pv8hPpNxrE"}],"key":"JsIjUx1IoB"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Make sure you install these first using:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zcaD9mi8wc"}],"key":"ZKji4px09z"},{"type":"code","lang":"bash","value":"pip install pystac_client folium seaborn pandas","position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"key":"YoXevjGdwa"}],"key":"KBtBBEpkVT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# imports\nimport requests\nfrom pystac_client import Client\nimport folium\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd","key":"TGLzw8Mzpo"},{"type":"output","id":"1nmw9bKCEtVK0v3OYpG51","data":[],"key":"CU7N3qBGkw"}],"key":"JkrHqDTWZZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the API endpoints","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L9xsXZfWTi"}],"key":"cqCeQPnYUf"}],"key":"DUBQDoTlJW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The EOAPI is a combination of two components.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xjykPpjLyn"}],"key":"f3anUA55Py"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Data catalog - the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"NUgfbIgcvL"},{"type":"link","url":"https://stacspec.org/en/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"SpatioTemporal Asset Catalog (STAC)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XTVZuh65Td"}],"urlSource":"https://stacspec.org/en/","key":"x9aqidGffx"},{"type":"text","value":" specification is used to catalog the available datasets","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uHlfXc4Gza"}],"key":"wA7bZqkKAM"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Dynamic tile server - ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HyKtyb6pPF"},{"type":"link","url":"https://developmentseed.org/titiler/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"TiTiler","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BRe5GmcdT1"}],"urlSource":"https://developmentseed.org/titiler/","key":"kguBmHeIYv"},{"type":"text","value":" is used to dynamically serve cloud optimized geotiff (raster) data files","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DXwsMWb2ke"}],"key":"MYqdg5EQRo"}],"key":"ZTvHKAOcYE"}],"key":"xG0iot12RC"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"STAC_API_URL = \"https://staging-stac.delta-backend.com/\"\nRASTER_API_URL = \"https://staging-raster.delta-backend.com\"","key":"rqSjTt4tYR"},{"type":"output","id":"RIsDRYjHnjjIM4QIWoRyH","data":[],"key":"HV6fXCibJ6"}],"key":"X5NKN7h1xM"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lXU4Y0BpqQ"},{"type":"inlineCode","value":"pystac_client","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Iu73Bbt6QS"},{"type":"text","value":" library to interact with the STAC data catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IFd9OO990t"}],"key":"ZpNrPRqtMR"}],"key":"dg7geKxQNd"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"catalog = Client.open(STAC_API_URL)","key":"PSRdDbs2oQ"},{"type":"output","id":"r69Yx6AXQLcMPO5xZJ_H0","data":[],"key":"PmwWzl9Qdf"}],"key":"HF0lI4c6LV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"List all the datasets (collections) in the catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y2eKmp6ivx"}],"key":"i0sN9zPuBc"}],"key":"AemczcaCAM"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"for collection in list(catalog.get_collections()):\n    print(f\"{collection.id} - {collection.title}\")","key":"Tj8LEcLdaz"},{"type":"output","id":"E1ojXOJup_hb8CtblstF9","data":[{"name":"stdout","output_type":"stream","text":"EPA-annual-emissions_6D_Composting - Gridded 2012 EPA Methane Emissions - Composting\nnightlights-500m-daily - Black Marble 500m Nightlights Daily Dataset\nlandsat-c2l2-sr-antarctic-glaciers-thwaites - Selected Landsat 7 through 9 Surface Reflectance Scenes for the Thwaites Glacier\nlandsat-c2l2-sr-antarctic-glaciers-pine-island - Selected Landsat 7 through 9 Surface Reflectance Scenes for the Pine Island Glacier\nsocial-vulnerability-index-household - Social Vulnerability Index (Household)\nno2-monthly - NO₂\nno2-monthly-diff - NO₂ (Diff)\nsport-lis-vsm0_100cm-percentile - 0-100 cm Volumetric Soil Moisture (%)\nlis-global-da-gws - Groundwater Storage - LIS 10km Global DA\nmtbs-burn-severity - MTBS Burn Severity\necco-surface-height-change - ECCO sea-surface height change from 1992 to 2017\neis_fire_fireline - Active Fire Line\noco2-geos-l3-daily - Gridded Daily OCO-2 Carbon Dioxide assimilated dataset\nlis-global-da-evap - Evapotranspiration - LIS 10km Global DA\neis_fire_newfirepix - VIIRs Fire Detections\nlis-tws-trend - Trend in Terrestrial Water Storage (TWS) Anomalies\nhouston-lst-day - Houston land surface temperature during daytime - decadal average\nlis-global-da-gpp - Gross Primary Productivity - LIS 10km Global DA\nhouston-urbanization - New Urbanization from 2001-2019 (NLCD)\nsocial-vulnerability-index-housing - Social Vulnerability Index (Housing)\neis_fire_perimeter - Fire Perimeters\ngrdi-imr-raster - GRDI IMR Constituent Raster\nbangladesh-landcover-2001-2020 - Annual land cover maps for 2001 and 2020\nnceo_africa_2017 - NCEO Africa Aboveground Woody Biomass 2017\nlis-global-da-swe - Snow Water Equivalent - LIS 10km Global DA\ngeoglam - GEOGLAM Crop Monitor\nhls-l30-002-ej-reprocessed - HLSL30.002 Environmental Justice Events\nlis-global-da-qs - Surface runoff - LIS 10km Global DA\nlis-tvegsuppression - Change in transpiration for 2020 fires using LIS outputs\nCMIP245-winter-median-pr - Projected changes to winter (January, February, and March) cumulative daily precipitation\nEPA-annual-emissions_1B2b_Natural_Gas_Processing - Gridded 2012 EPA Methane Emissions - Natural Gas Processing\nEPA-annual-emissions_6B_Wastewater_Treatment_Domestic - Gridded 2012 EPA Methane Emissions - Domestic Wastewater Treatment\nhouston-aod-diff - Houston AOD: Difference Between 2000-2009 & 2010-2019\nCMIP245-winter-median-ta - Projected changes to winter (January, February, and March) average daily air temperature\nEPA-annual-emissions_6B_Wastewater_Treatment_Industrial - Gridded 2012 EPA Methane Emissions - Industrial Wastewater Treatment\nEPA-annual-emissions_1B2a_Petroleum - Gridded 2012 EPA Methane Emissions - Petroleum\nEPA-annual-emissions_1B1a_Coal_Mining_Surface - Gridded 2012 EPA Methane Emissions - Surface Coal Mines\nEPA-annual-emissions_1A_Combustion_Mobile - Gridded 2012 EPA Methane Emissions - Mobile Combustion\nEPA-annual-emissions_4F_Field_Burning - Gridded 2012 EPA Methane Emissions - Field Burning\nlis-tws-anomaly - Terrestrial Water Storage (TWS) Anomalies\nCMIP585-winter-median-pr - Projected changes to winter (January, February, and March) cumulative daily precipitation\nbarc-thomasfire - Burn Area Reflectance Classification for Thomas Fire\nEPA-annual-emissions_2B5_Petrochemical_Production - Gridded 2012 EPA Methane Emissions - Petrochemical Production\ncaldor-fire-behavior - Caldor Fire Behavior\nconus-reach - Stream network across the Contiguous United States\nIS2SITMOGR4-cog - ICESat-2 L4 Monthly Gridded Sea Ice Thickness (COGs)\ncaldor-fire-burn-severity - Caldor Fire Burn Severity\nEPA-monthly-emissions_1B2b_Natural_Gas_Production - Gridded 2012 EPA Methane Emissions - Natural Gas Production (monthly)\ndisalexi-etsuppression - disalexi-etsuppression\nCMIP585-winter-median-ta - Projected changes to winter (January, February, and March) average daily air temperature\nfrp-max-thomasfire - Maximum Fire Radiative Power for Thomas Fire\nco2-mean - CO₂ (Avg)\nlis-tws-nonstationarity-index - Global TWS Non-Stationarity Index\nhouston-lst-diff - Houston LST (Diff)\nlis-global-da-tws - Terrestrial Water Storage - LIS 10km Global DA\nOMI_trno2-COG - OMI_trno2 - 0.10 x 0.10 Annual as Cloud-Optimized GeoTIFFs (COGs)\nmodis-annual-lai-2003-2020 - Annual LAI maps for 2003 and 2021 (Bangladesh)\nlandsat-c2l2-sr-lakes-lake-balaton - Selected Landsat 7 through 9 Surface Reflectance Scenes for Lake Balaton\nlis-global-da-tws-trend - Terrestrial Water Storage Trend - LIS 10km Global DA\nsnow-projections-median - Projections of Snow Water Equivalent (SWE)\nhouston-landcover - Houston Land Cover\nlandsat-c2l2-sr-lakes-lake-biwa - Selected Landsat 7 through 9 Surface Reflectance Scenes for Lake Biwa\nhouston-lst-night - Houston land surface temperature at night time - decadal average\nsnow-projections-diff - Projections of Snow Water Equivalent (SWE) losses\nlandsat-c2l2-sr-lakes-tonle-sap - Selected Landsat 7 through 9 Surface Reflectance Scenes for Tonlé Sap\nhouston-aod - Aerosol Optical Depth (AOD)\nsnow-projections-diff-245 - Projections of Snow Water Equivalent (SWE) Losses - SSP2-4.5\nhouston-ndvi - Houston NDVI: decadal average\nlandsat-c2l2-sr-lakes-vanern - Selected Landsat 7 through 9 Surface Reflectance Scenes for Vänern\nsnow-projections-diff-585 - Projections of Snow Water Equivalent (SWE) Losses - SSP5-8.5\nlis-global-da-gpp-trend - Gross Primary Productivity Trend - LIS 10km Global DA\nlis-global-da-qsb - Subsurface Runoff - LIS 10km Global DA\nlandsat-c2l2-sr-lakes-aral-sea - Selected Landsat 7 through 9 Surface Reflectance Scenes for the Aral Sea\nsnow-projections-median-245 - Projections of Snow Water Equivalent (SWE) - SSP2-4.5\nlis-global-da-streamflow - Streamflow - LIS 10km Global DA\nrecovery-proxy-maps-covid-19 - Recovery Proxy Maps\nlis-etsuppression - Change in ET for 2020 fires using LIS outputs\nsnow-projections-median-585 - Projections of Snow Water Equivalent (SWE) - SSP5-8.5\nlis-global-da-totalprecip - Total Precipitation - LIS 10km Global DA\nls8-covid-19-example-data - \nslowdown-proxy-covid-19-changing-landscapes - Slowdown Proxy Maps\nnightlights-hd-monthly - Black Marble High Definition Nightlights Monthly Dataset\ngrdi-vnl-raster - GRDI VNL Constituent Raster\nsocial-vulnerability-index-housing-nopop - Social Vulnerability Index (Housing) (Masked)\nsocial-vulnerability-index-household-nopop - Social Vulnerability Index (Household) (Masked)\nsocial-vulnerability-index-socioeconomic - Social Vulnerability Index (SocioEconomic)\nsocial-vulnerability-index-socioeconomic-nopop - Social Vulnerability Index (SocioEconomic) (Masked)\ngrdi-filled-missing-values-count - GRDI Filled Missing Values Count\nsocial-vulnerability-index-overall - Social Vulnerability Index (Overall)\nsocial-vulnerability-index-minority-nopop - Social Vulnerability Index (Minority) (Masked)\ngrdi-cdr-raster - GRDI CDR Constituent Raster\nMO_NPP_npp_vgpm - \nsocial-vulnerability-index-overall-nopop - Social Vulnerability Index (Overall) (Masked)\ngrdi-v1-raster - GRDI V1 raster\ngrdi-shdi-raster - GRDI SHDI Constituent Raster\nblue-tarp-planetscope - Hurricane Ida - Blue Tarps PlanetScope Image\nnightlights-hd-1band - Black Marble High Definition Nightlights 1 band Dataset\nsocial-vulnerability-index-minority - Social Vulnerability Index (Minority)\nOMSO2PCA-COG - OMI/Aura Sulfur Dioxide (SO2) Total Column L3 1 day Best Pixel in 0.25 degree x 0.25 degree V3 as Cloud-Optimized GeoTIFFs (COGs)\nEPA-annual-emissions_1B1a_Coal_Mining_Underground - Gridded 2012 EPA Methane Emissions - Underground Coal Mines\nhls-s30-002-ej-reprocessed - HLSS30.002 Environmental Justice Events\ngrdi-v1-built - GRDI BUILT Constituent Raster\ngrdi-vnl-slope-raster - GRDI VNL Slope Constituent Raster\nfacebook_population_density - Population Density Maps using satellite imagery built by Meta\nEPA-annual-emissions_1B1a_Abandoned_Coal - Gridded 2012 EPA Methane Emissions - Abandoned Coal Mines\nEPA-annual-emissions_4B_Manure_Management - Gridded 2012 EPA Methane Emissions - Manure Management\nEPA-annual-emissions_1A_Combustion_Stationary - Gridded 2012 EPA Methane Emissions - Stationary Combustion\nEPA-annual-emissions_1B2b_Natural_Gas_Production - Gridded 2012 EPA Methane Emissions - Natural Gas Production\nEPA-annual-emissions_6A_Landfills_Industrial - Gridded 2012 EPA Methane Emissions - Industrial Landfills\nEPA-annual-emissions_2C2_Ferroalloy_Production - Gridded 2012 EPA Methane Emissions - Ferroalloy Production\nEPA-annual-emissions_4A_Enteric_Fermentation - Gridded 2012 EPA Methane Emissions - Enteric Fermentation\nEPA-annual-emissions_6A_Landfills_Municipal - Gridded 2012 EPA Methane Emissions - Municipal Landfills\nEPA-annual-emissions_1B2b_Natural_Gas_Transmission - Gridded 2012 EPA Methane Emissions - Natural Gas Transmission\nEPA-annual-emissions_5_Forest_Fires - Gridded 2012 EPA Methane Emissions - Forest Fires\nEPA-annual-emissions_1B2b_Natural_Gas_Distribution - Gridded 2012 EPA Methane Emissions - Natural Gas Distribution\nEPA-annual-emissions_4C_Rice_Cultivation - Gridded 2012 EPA Methane Emissions - Rice Cultivation\nEPA-daily-emissions_5_Forest_Fires - Gridded 2012 EPA Methane Emissions - Forest Fires (daily)\nEPA-monthly-emissions_1A_Combustion_Stationary - Gridded 2012 EPA Methane Emissions - Stationary Combustion (monthly)\nEPA-monthly-emissions_4F_Field_Burning - Gridded 2012 EPA Methane Emissions - Field Burning (monthly)\nEPA-monthly-emissions_4B_Manure_Management - Gridded 2012 EPA Methane Emissions - Manure Management (monthly)\nEPA-monthly-emissions_1B2a_Petroleum - Gridded 2012 EPA Methane Emissions - Petroleum (monthly)\nblue-tarp-detection - Hurricane Ida - Detected Blue Tarps\nEPA-monthly-emissions_4C_Rice_Cultivation - Gridded 2012 EPA Methane Emissions - Rice Cultivation (monthly)\nco2-diff - CO₂ (Diff)\n"}],"key":"XmrfjL5m1p"}],"key":"yw2XgBd5Ym"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Choose a collection to work with. We’ll choose the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D1ddxaV19I"},{"type":"inlineCode","value":"no2-monthly","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O88nTksXTj"},{"type":"text","value":" dataset for this example.\nThis is the global nitrogen dioxide data organized into monthly metrics.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YbmjZE80qr"}],"key":"nB7GMvI6Mf"}],"key":"sFT8NuuNnn"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"collection_id = \"no2-monthly\"","key":"Y5b1X9Ehlz"},{"type":"output","id":"07Zjl1m1O3obQ9GoJRxnJ","data":[],"key":"Cuusj1CYPM"}],"key":"aQrydZyTk3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Search all the items in the collection.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FRRsf5wwQu"}],"key":"NlWnoOmAMO"}],"key":"WIgqRGk23L"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"search = catalog.search(collections=[collection_id])\nitems = list(search.items())\nitems","key":"XauIb0eERm"},{"type":"output","id":"vM8PiO11tB0J_MGBYWCxB","data":[{"output_type":"execute_result","execution_count":78,"metadata":{},"data":{"text/plain":{"content":"[<Item id=OMI_trno2_0.10x0.10_202212_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202211_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202210_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202209_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202208_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202207_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202206_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202205_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202204_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202203_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202202_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202201_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202112_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202111_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202110_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202109_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202108_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202107_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202106_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202105_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202104_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202103_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202102_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202101_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202012_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202011_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202010_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202009_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202008_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202007_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202006_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202005_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202004_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202003_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202002_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_202001_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201912_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201911_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201910_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201909_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201908_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201907_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201906_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201905_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201904_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201903_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201902_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201901_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201812_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201811_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201810_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201809_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201808_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201807_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201806_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201805_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201804_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201803_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201802_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201801_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201712_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201711_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201710_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201709_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201708_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201707_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201706_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201705_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201704_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201703_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201702_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201701_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201612_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201611_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201610_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201609_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201608_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201607_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201606_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201605_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201604_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201603_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201602_Col3_V4.nc>,\n <Item id=OMI_trno2_0.10x0.10_201601_Col3_V4.nc>]","content_type":"text/plain"}}}],"key":"HOGRuAMToX"}],"key":"VNh9PhNu80"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load and inspect one of the item’s assets. In the catalog, the cloud optimized geotiffs (COG) are indexed under ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w4VhiAFIco"},{"type":"inlineCode","value":"cog_default","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XZWzOnfrFd"},{"type":"text","value":" asset.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nAzqyXZgiU"}],"key":"IvRroZwbW8"}],"key":"uWFsj53poN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"s3_uri = items[0].assets[\"cog_default\"].href","key":"zmXSVWqBeD"},{"type":"output","id":"w0mwCxFooNeQPWiZmlToV","data":[],"key":"pLEwtu1iSF"}],"key":"SNdGf135ZI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get statistics for the COG file using the TiTiler api endpoint ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Jz2rhwaASR"},{"type":"inlineCode","value":"/cog/statistics","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RNpSPilrYQ"}],"key":"PWggwaczDN"}],"key":"LDumzKyqPI"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"stats = requests.get(\n    f\"{RASTER_API_URL}/cog/statistics\",\n    params={\"url\": s3_uri}\n).json()\nstats","key":"xTmnQ5p9S0"},{"type":"output","id":"ZmkBb4NHfgalY6Np4kzD_","data":[{"output_type":"execute_result","execution_count":80,"metadata":{},"data":{"text/plain":{"content":"{'1': {'min': -6707683428139008.0,\n  'max': 3.884375294450074e+16,\n  'mean': 423085978017950.7,\n  'count': 434008.0,\n  'sum': 1.8362269914761475e+20,\n  'std': 971153921053730.1,\n  'median': 245577371615232.0,\n  'majority': 121884402253824.0,\n  'minority': -6187472157409280.0,\n  'unique': 334278.0,\n  'histogram': [[58.0,\n    423787.0,\n    8532.0,\n    1008.0,\n    339.0,\n    199.0,\n    79.0,\n    4.0,\n    0.0,\n    2.0],\n   [-6707683428139008.0,\n    -2152539764031488.0,\n    2402603900076032.0,\n    6957747698401280.0,\n    1.151289069142016e+16,\n    1.6068035295051776e+16,\n    2.062317882494157e+16,\n    2.517832235483136e+16,\n    2.973346588472115e+16,\n    3.4288609414610944e+16,\n    3.884375294450074e+16]],\n  'valid_percent': 82.78,\n  'masked_pixels': 90280.0,\n  'valid_pixels': 434008.0,\n  'percentile_2': -178728386691072.0,\n  'percentile_98': 2662192260317184.0}}","content_type":"text/plain"}}}],"key":"TI4a4vHNp2"}],"key":"HCkGthaRQa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Display the COG in a map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"C0iICqUogl"}],"key":"GxbiZhOVMr"}],"key":"CIPQOxd3pI"}],"key":"Epm5c0lVxX"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, we’ll make a request for imagery tiles to the raster API.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zgeBHN6wxg"}],"key":"yoJHncfD2I"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Define the query parameters for the request:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gjTRbUULtg"}],"key":"uazt1rr9R8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"collection","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"J9CEIwSoH4"}],"key":"zAugLsxTrY"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"item","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NonNea7dwX"}],"key":"LexcHqNrRo"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"rescale","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"rDrU6jW0RF"}],"key":"PN5BQPi3YB"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"colormap","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"pj0s7fqMYr"}],"key":"zfxFQUwhvo"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"assets","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"VATn2yJorC"}],"key":"PL7kOcOl2P"}],"key":"X5bzuvbt6G"}],"key":"yToUiUuUqn"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = collection_id\nitem = items[0].id\ncolormap = \"rainbow\"\nassets = \"cog_default\"\nrescale = f\"{stats['1']['min']},{stats['1']['max']}\"","key":"Ghk02UFzy0"},{"type":"output","id":"zxA3LM3ULgrUTEQiCY3xo","data":[],"key":"JsvR74kDKd"}],"key":"eazbK0QKk7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get the tileset json for the relevant item.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZmX2uRNQty"}],"key":"WmMkaVoQrd"}],"key":"vQna0rl7kp"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"tiles = requests.get(\n    f\"{RASTER_API_URL}/stac/tilejson.json?collection={collection}&item={item}&assets={assets}&colormap_name={colormap}&rescale={rescale}\"\n).json()","key":"TODgNZbN6y"},{"type":"output","id":"MfEB6dfbaUkvfkY9lVsbw","data":[],"key":"PMSxYYohU9"}],"key":"THR09khATc"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"tiles","key":"e9d6H84XxB"},{"type":"output","id":"YX_xpAMuwDFtE97Tn0uVi","data":[{"output_type":"execute_result","execution_count":83,"metadata":{},"data":{"text/plain":{"content":"{'tilejson': '2.2.0',\n 'version': '1.0.0',\n 'scheme': 'xyz',\n 'tiles': ['https://staging-raster.delta-backend.com/stac/tiles/WebMercatorQuad/{z}/{x}/{y}@1x?collection=no2-monthly&item=OMI_trno2_0.10x0.10_202212_Col3_V4.nc&assets=cog_default&colormap_name=rainbow&rescale=-6707683428139008.0%2C3.884375294450074e+16'],\n 'minzoom': 0,\n 'maxzoom': 24,\n 'bounds': [-180.0, -90.0, 180.0, 90.0],\n 'center': [0.0, 0.0, 0]}","content_type":"text/plain"}}}],"key":"qWt2ZDev6r"}],"key":"ms9jShOIbz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yNYecVJdbS"},{"type":"inlineCode","value":"/tiles","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"leInMjs7dT"},{"type":"text","value":" endpoint to visualize the file in a map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yMZ1PPz6w5"}],"key":"G8ywRpw96m"}],"key":"AgtWaQsmYS"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"m = folium.Map(\n    zoom_start=10,\n    scroll_wheel_zoom=True, \n    tiles=tiles[\"tiles\"][0],\n    attr=\"VEDA\", \n    minzoom=0, \n    maxzoom=18,\n)","key":"R7l3hXbhvt"},{"type":"output","id":"6_JCrvHv1WUF3XOHz0Ee3","data":[],"key":"it8XvZT7Zo"}],"key":"BPfYEd8Q5X"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"m","key":"XqnYzv1LKH"},{"type":"output","id":"zJtzxhxTLKwqMiBx7w84E","data":[{"output_type":"execute_result","execution_count":89,"metadata":{},"data":{"text/html":{"content":"<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    \n    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n    \n        &lt;script&gt;\n            L_NO_TOUCH = false;\n            L_DISABLE_3D = false;\n        &lt;/script&gt;\n    \n    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n    \n            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n            &lt;style&gt;\n                #map_6b1058c0a78452c16c2bf32505192993 {\n                    position: relative;\n                    width: 100.0%;\n                    height: 100.0%;\n                    left: 0.0%;\n                    top: 0.0%;\n                }\n                .leaflet-container { font-size: 1rem; }\n            &lt;/style&gt;\n        \n&lt;/head&gt;\n&lt;body&gt;\n    \n    \n            &lt;div class=&quot;folium-map&quot; id=&quot;map_6b1058c0a78452c16c2bf32505192993&quot; &gt;&lt;/div&gt;\n        \n&lt;/body&gt;\n&lt;script&gt;\n    \n    \n            var map_6b1058c0a78452c16c2bf32505192993 = L.map(\n                &quot;map_6b1058c0a78452c16c2bf32505192993&quot;,\n                {\n                    center: [0, 0],\n                    crs: L.CRS.EPSG3857,\n                    zoom: 1,\n                    zoomControl: true,\n                    preferCanvas: false,\n                    scrollWheelZoom: true,\n                    minzoom: 0,\n                    maxzoom: 18,\n                }\n            );\n\n            \n\n        \n    \n            var tile_layer_551065a2ecf6b4683533df070a836004 = L.tileLayer(\n                &quot;https://staging-raster.delta-backend.com/stac/tiles/WebMercatorQuad/{z}/{x}/{y}@1x?collection=no2-monthly\\u0026item=OMI_trno2_0.10x0.10_202212_Col3_V4.nc\\u0026assets=cog_default\\u0026colormap_name=rainbow\\u0026rescale=-6707683428139008.0%2C3.884375294450074e+16&quot;,\n                {&quot;attribution&quot;: &quot;VEDA&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n            ).addTo(map_6b1058c0a78452c16c2bf32505192993);\n        \n&lt;/script&gt;\n&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>","content_type":"text/html"},"text/plain":{"content":"<folium.folium.Map at 0x165780b10>","content_type":"text/plain"}}}],"key":"KY9xRwt1fA"}],"key":"uerEPOWHr5"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2. Using the EOAPI to generate a time-series of OMI NO₂ and SO₂ datasets","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fBAJmlZgE7"}],"identifier":"id-2-using-the-eoapi-to-generate-a-time-series-of-omi-no-and-so-datasets","label":"2. Using the EOAPI to generate a time-series of OMI NO₂ and SO₂ datasets","html_id":"id-2-using-the-eoapi-to-generate-a-time-series-of-omi-no-and-so-datasets","implicit":true,"key":"AdKLfFoKEY"}],"key":"ngH9GGY7bG"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"There’s a story published in the EODashboard with the following title:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oSoU1hGczZ"}],"key":"SxW1WfTsyk"},{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Air pollution in India, China and the U.S. have changed significantly over the past two decades","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AszhigB3gy"}],"key":"ezObZfa6JP"}],"key":"Kg2Xna0NTm"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Link: ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"U4r8tvmYPM"},{"type":"link","url":"https://eodashboard.org/story?id=air-pollution-us-india-china","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"https://​eodashboard​.org​/story​?id​=​air​-pollution​-us​-india​-china","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uss5urdiAy"}],"urlSource":"https://eodashboard.org/story?id=air-pollution-us-india-china","key":"RXu4PcHIx5"}],"key":"zqiU7U8bUS"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The story talks about the trend of air pollution in India, China and the U.S. using the NO","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"F6i0zBudxE"},{"type":"subscript","children":[{"type":"text","value":"2","key":"uvmeg1027F"}],"key":"xQBFcSZ4YI"},{"type":"text","value":" and SO","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"x3WDxPv2h3"},{"type":"subscript","children":[{"type":"text","value":"2","key":"zNHL1c3GjQ"}],"key":"OTYixxSkX2"},{"type":"text","value":" readings taken from the OMI instrument","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uE7ZJhxaab"}],"key":"JWqRdyehWi"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Here, we’ll recreate the analysis using the EOAPI.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"MDPOyYFkbb"}],"key":"VaLJUVcUg7"}],"key":"HBmDcMFBCN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Here, we find the relevant collection ID for the dataset\ncollections = {\n    \"no2\": \"OMI_trno2-COG\",\n    \"so2\": \"OMSO2PCA-COG\",\n}","key":"ScJTIkTl7j"},{"type":"output","id":"RtmCOJcDhcUcOIUe791CG","data":[],"key":"Plxn9LMZ1k"}],"key":"C5VJD986Bg"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the roughly similar Area of Interest (AOI) for each of the countries as seen in the story.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cWk4ZY6cFU"}],"key":"afH3z7XV7o"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Disclaimer: Since the AOI is roughly similar, but not exactly the same, the results may differe slightly, but should maintain similar trends.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KRhe59g4Sb"}],"key":"FP0aRu1CjO"}],"key":"RSs5pGxIka"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"aois = {\n    \"india\": {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"coordinates\": [\n          [\n            [\n              84.44227371801799,\n              25.276852788244952\n            ],\n            [\n              81.73331688510166,\n              25.379576397063317\n            ],\n            [\n              81.40290450746915,\n              20.640781701865322\n            ],\n            [\n              84.09079123546121,\n              20.59296261766137\n            ],\n            [\n              84.44227371801799,\n              25.276852788244952\n            ]\n          ]\n        ],\n        \"type\": \"Polygon\"\n      }\n    },\n    \"china\": {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"coordinates\": [\n          [\n            [\n              118.14487188674968,\n              40.38237805885373\n            ],\n            [\n              112.59679754686567,\n              40.39197699341523\n            ],\n            [\n              112.78712023622006,\n              32.015052150835814\n            ],\n            [\n              117.937454307721,\n              32.102440507249895\n            ],\n            [\n              118.14487188674968,\n              40.38237805885373\n            ]\n          ]\n        ],\n        \"type\": \"Polygon\"\n      }\n    },\n    \"usa\": {\n        \"type\": \"Feature\",\n        \"properties\": {},\n        \"geometry\": {\n            \"coordinates\": [\n            [\n                [\n                -80.16702521343733,\n                41.73420113945659\n                ],\n                [\n                -83.56446680395005,\n                38.599369254919566\n                ],\n                [\n                -82.00280661075571,\n                37.54658260550103\n                ],\n                [\n                -78.28140359718638,\n                40.450899619800595\n                ],\n                [\n                -80.16702521343733,\n                41.73420113945659\n                ]\n            ]\n            ],\n            \"type\": \"Polygon\"\n        }\n    },\n}","key":"gMWdicXGQf"},{"type":"output","id":"mY4_jFFXJxchFTfszFrT_","data":[],"key":"XPMTaSfe4g"}],"key":"g855U2Kpkg"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define a function that takes the following params:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VtAojKiwSs"}],"key":"zrBZTUQ4YV"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"item","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"GFyQxPbZwm"},{"type":"text","value":": a STAC item","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dCFE4NKrmb"}],"key":"uMx7SQNIiw"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"geojson","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xOVq56oHO0"},{"type":"text","value":": the geojson of the AOI","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HlRltEwdmz"}],"key":"TrGtZXGVOK"}],"key":"RtVYKANHQi"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oQdiEKeSCL"},{"type":"inlineCode","value":"/cog/statistics/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"efJuEkuO16"},{"type":"text","value":" endpoint of the raster API, we get back the statistics of the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RqqZTeAa5V"},{"type":"inlineCode","value":"item","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ENnLtXOKk3"},{"type":"text","value":" (which corresponds to one COG file) within the given ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"x7or5JtojB"},{"type":"inlineCode","value":"geojson","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fABYTagZhk"},{"type":"text","value":" AOI.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xiucSun8q1"}],"key":"mblBswJ3yi"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The statistics includes ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ncGrQyvVZr"},{"type":"inlineCode","value":"min","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uyoNFWOU4U"},{"type":"text","value":", ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bukYuwAd2j"},{"type":"inlineCode","value":"max","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"NV6BUEr4Z6"},{"type":"text","value":", ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FxXUtQMf6c"},{"type":"inlineCode","value":"mean","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"NgzLy4d9Bm"},{"type":"text","value":", ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JbqZ0MNpci"},{"type":"inlineCode","value":"std","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bmF6yJ0eg9"},{"type":"text","value":", etc.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Q3iOVEIwlV"}],"key":"XjSquvKlb5"}],"key":"lmHkeUAL5E"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# the bounding box should be passed to the geojson param as a geojson Feature or FeatureCollection\ndef generate_stats(item, geojson):\n    result = requests.post(\n        f\"{RASTER_API_URL}/cog/statistics\", \n        params={\n            \"url\": item.assets[\"cog_default\"].href\n        },\n        json=geojson\n    ).json()\n    return {\n        **result[\"properties\"],\n        \"start_datetime\": str(item.properties.get(\"datetime\", item.properties.get(\"start_datetime\")))[:4],\n        \"collection\": item.collection_id\n    }","key":"jRuz3dEoFL"},{"type":"output","id":"L0EVVRq5ApjUc1yFuArPn","data":[],"key":"LyPsoMrp15"}],"key":"yqnrE2H0dW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s start out with the US 🇺🇸 !","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xHGzSO3REN"}],"key":"wZdS4BDO0J"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We’ll get all the items in the NO2 and SO2 collections and generate the statistics from them for the Ohio River Valley region of the United States.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YWgLm3qTRC"}],"key":"q8ab2hAEWi"}],"key":"lMJ07muIZG"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"usa_aoi = aois[\"usa\"]\nitems = list(catalog.search(collections=[collections[\"no2\"], collections[\"so2\"]]).items())\nusa_stats = [\n    generate_stats(item, usa_aoi)\n    for item in items\n]","key":"y3g6t7q8fC"},{"type":"output","id":"F3TlpGOGbmzirLYAwtmlD","data":[],"key":"cZoL8zR6Pa"}],"key":"gVJM5t04Oi"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a function that takes the statistics (which is a json) and converts it to a pandas dataframe in a format that’ll make it easy to read and visualize.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Nu8H7QFf3p"}],"key":"CNv9lkSyca"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We are only concerned with the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"c3N8r8nxT1"},{"type":"inlineCode","value":"mean","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vkhupcuymO"},{"type":"text","value":" statistics for this example. Specifically the change from the year 2005 as a percentage. We’ll use pandas to calculate this change percentage and assign it to the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"glvuRCiCrN"},{"type":"inlineCode","value":"change","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"w6NsNpP0wg"},{"type":"text","value":" column.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eRA20lMxQS"}],"key":"Y0zSMOAC6J"}],"key":"k1pHiNhIGa"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def clean_stats(stats_json) -> pd.DataFrame:\n    # convert the stats_json as is to pandas dataframe\n    df = pd.json_normalize(stats_json)\n    # simple renaming for readability\n    df.columns = [col.replace(\"statistics.1.\", \"\") for col in df.columns]\n    # create a date column from the start_datetime column\n    df[\"date\"] = pd.to_datetime(df[\"start_datetime\"], format=\"mixed\")\n    # rename the collection to a more friendly name\n    df[\"collection\"] = df[\"collection\"].map(lambda x: next(key for key, value in collections.items() if value == x))\n    # sort the dataframe by the date column\n    df = df.sort_values(by=[\"date\"])\n    # create a change column that calculates the change of the mean values from the value in 2005\n    df[\"change\"] = df.groupby(\"collection\", group_keys=False)[\"mean\"].apply(lambda x: x.div(x.iloc[0]).subtract(1).mul(100))\n    return df","key":"CgVC7xEsty"},{"type":"output","id":"k7KJIazsMjCVXaqFd-o-7","data":[],"key":"JpAdUoyjW5"}],"key":"LryvCpNi5z"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cleaned_stats_df = clean_stats(usa_stats)","key":"juZpUNulUA"},{"type":"output","id":"QZvlDnwzXTmBB3AVRoCuX","data":[],"key":"lxmRkwm32s"}],"key":"sMh0Rr4DDD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We’ll now create a time-series of the change in mean values for NO2 and SO2 for the area in the US.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fe0ota4e7d"}],"key":"wVwRATDUre"}],"key":"fy9Gxzv8MN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"plt.xticks([i for i in range(0, 21, 2)])\nsns.set_style(\"darkgrid\")\nax = sns.lineplot(\n    x=\"start_datetime\",\n    y=\"change\",\n    hue=\"collection\",\n    data=cleaned_stats_df,\n    palette=[\"#2196f3\", \"#ff5722\"],\n    style=\"collection\",\n    markers=[\"*\", \"d\"],\n)\nax.set_title(\"US - Ohio River Valley\")\nax.set_xlabel(\"Years\")\nax.set_ylabel(\"Change from 2005 (%)\")\nplt.legend(frameon=False, ncol=3)\nplt.show()","key":"n0OaHbb9nw"},{"type":"output","id":"8NMkx-KgxZZ27_EKhT9xC","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"0daf1261d5b4553525e31d60cd7b502a","path":"/example-viewer/build/0daf1261d5b4553525e31d60cd7b502a.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"W50yxFcuVo"}],"key":"i1RQBRNU3F"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, let’s create a function that creates this trend graph, given the country.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TysR0LHlE2"}],"key":"LwfnfJqh9y"}],"key":"T7OBjdmh3Y"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def create_chart(country):\n    stats = [generate_stats(item, aois[country]) for item in list(catalog.search(collections=[collections[\"no2\"], collections[\"so2\"]]).items())]\n    df = clean_stats(stats)\n\n    # Create a chart using Seaborn\n    plt.xticks([i for i in range(0, 21, 2)])\n    sns.set_style(\"darkgrid\")\n    ax = sns.lineplot(\n        x=\"start_datetime\",\n        y=\"change\",\n        hue=\"collection\",\n        data=df,\n        palette=[\"#2196f3\", \"#ff5722\"],\n        style=\"collection\",\n        markers=[\"*\", \"d\"],\n        legend=\"full\",\n        # label=[\"no2\", \"so2\"]\n    )\n    ax.set_title(country.title())\n    ax.set_xlabel(\"Years\")\n    ax.set_ylabel(\"Change from 2005 (%)\")\n    ax.legend([\"no2\", \"so2\"])\n    plt.legend(frameon=False, ncol=3)\n    plt.show()","key":"HBFvGkId2Q"},{"type":"output","id":"2lD5wgeDGwxW1a8EztmsE","data":[],"key":"FSGeArmGwG"}],"key":"iC2xr9k03g"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can use this function to create charts for the rest of the AOIs.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YC8liLZN6P"}],"key":"h5sGYvChYI"}],"key":"ONdvqADxVJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"India 🇮🇳","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sX2g85ykJ8"}],"key":"sGSt5Oosq8"}],"key":"DK3m49S0kt"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"create_chart(\"india\")","key":"iMn7JIBQiC"},{"type":"output","id":"9I88S1V4xWNdNZsUXYDj1","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"2d8eb241d54c89d0748234dfb653c1f9","path":"/example-viewer/build/2d8eb241d54c89d0748234dfb653c1f9.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"y8euDWO4oy"}],"key":"W3AfMS90OY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"China 🇨🇳","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I10yEzBw2k"}],"key":"f6vcrTwP8O"}],"key":"ilGdJLQFfV"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"create_chart(\"china\")","key":"kLb2OPxSPl"},{"type":"output","id":"xssf5hCudYm8ejsmFmTtX","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"bcc0e960399ecbcecb76c8807968906e","path":"/example-viewer/build/bcc0e960399ecbcecb76c8807968906e.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"VByc7U2GUq"}],"key":"yYK2mjusUC"}],"key":"xs2AFmiN1Z"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Impact of Covid19 induced lockdown on NO2 levels","url":"/external-notebooks/eurodatacube/notebooks/notebooks/contributions/no2-analysis-covid19-lockdowns","group":"Contributions"},"next":{"title":"Important notes","url":"/external-notebooks/eurodatacube/notebooks/notebooks/contributions/ogc-edc","group":"Contributions"}}},"domain":"http://localhost:3000"}