{"version":1,"kind":"Notebook","sha256":"bc513364745e12e452fdaae3fc0bca6b7fd244e003671ec4c4c14e1ac693aa09","slug":"external-notebooks.eoxhub-workspaces.eoxhub-notebooks.pangeo-dask-notebooks.example-wildfires","location":"/external_notebooks/eoxhub-workspaces/eoxhub-notebooks/pangeo-dask_notebooks/example_wildfires.ipynb","dependencies":[],"frontmatter":{"title":"Scale your processes with Dask - hands on example","content_includes_title":false,"kernelspec":{"name":"conda-env-lampata-lampata-Pangeo-Notebook-py","display_name":"lampata-lampata-Pangeo-Notebook","language":"python"},"github":"https://github.com/eurodatacube/example-viewer","subject":"Euro Data Cube Examples","numbering":{"title":{"offset":4}},"edit_url":"https://github.com/eurodatacube/example-viewer/blob/main/external_notebooks/eoxhub-workspaces/eoxhub-notebooks/pangeo-dask_notebooks/example_wildfires.ipynb","exports":[{"format":"ipynb","filename":"example_wildfires.ipynb","url":"/example-viewer/build/example_wildfires-df3f3a7507645cf941e685c7d36b6298.ipynb"}]},"widgets":{"application/vnd.jupyter.widget-state+json":{"state":{},"version_major":2,"version_minor":0}},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Create a burn severity maps using Sentinel-2 Cloud-Optimised Dataset","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RONNYyvFFZ"}],"identifier":"create-a-burn-severity-maps-using-sentinel-2-cloud-optimised-dataset","label":"Create a burn severity maps using Sentinel-2 Cloud-Optimised Dataset","html_id":"create-a-burn-severity-maps-using-sentinel-2-cloud-optimised-dataset","implicit":true,"key":"xvGH4LDQI6"},{"type":"heading","depth":3,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Context","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"fJskF2bBPI"}],"identifier":"context","label":"Context","html_id":"context","implicit":true,"key":"Y5Y44xSm7v"},{"type":"heading","depth":4,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Purpose","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"waR17xSgQf"}],"identifier":"purpose","label":"Purpose","html_id":"purpose","implicit":true,"key":"uvv7ZOpPMj"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Demonstrate how to fetch satellite Sentinel-2 data to generate burn severity maps for the assessment of the areas affected by wildfires.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"OdCJOGSIW0"}],"key":"pmcpfHtLV0"},{"type":"heading","depth":4,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Methodology approach","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"mjCa4H4BkT"}],"identifier":"methodology-approach","label":"Methodology approach","html_id":"methodology-approach","implicit":true,"key":"YnvfdhTgZr"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Access Sentinel-2 L2A cloud optimised dataset through STAC","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CANBKsRfYe"}],"key":"L7uaEwF95D"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Compute the Normalised Burn Ratio (NBR) index to highlight burned areas","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"CSF6Bmj7xB"}],"key":"wePNKU2FAT"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Classify burn severity","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"zOEKsjikvX"}],"key":"v4O3rTOscJ"}],"key":"yDw88ZIyG3"},{"type":"heading","depth":4,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Highlights","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"PM9O9bTc8f"}],"identifier":"highlights","label":"Highlights","html_id":"highlights","implicit":true,"key":"aftdgycKiZ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"The NBR index uses near-infrared (NIR) and shortwave-infrared (SWIR) wavelengths.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"wzbqDbGiPo"}],"key":"FxY5RByadS"}],"key":"UWXbI7dNUB"},{"type":"heading","depth":5,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Related publications","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"Keh4TgcZ69"}],"identifier":"related-publications","label":"Related publications","html_id":"related-publications","implicit":true,"key":"d5IKJWa8lj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":18,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"https://www.sciencedirect.com/science/article/pii/S1470160X22004708#f0035","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"https://​www​.sciencedirect​.com​/science​/article​/pii​/S1470160X22004708​#f0035","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"HSw3Br7TfG"}],"urlSource":"https://www.sciencedirect.com/science/article/pii/S1470160X22004708#f0035","key":"qEpquRFiL2"}],"key":"wIoLllFMcr"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"link","url":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire Analysis Compiled Scripts (Gadi)/dNBR_full.py","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"w324E5RYqa"}],"urlSource":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","data":{"kind":"file","org":"yobimania","repo":"dea-notebooks","reference":"e0ca59f437395f7c9becca74badcf8c49da6ee90","file":"Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","raw":"https://raw.githubusercontent.com/yobimania/dea-notebooks/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py"},"internal":false,"protocol":"github","key":"PtJbmnamiE"}],"key":"iYOFbJ3LxQ"}],"key":"VYySPLV9dv"}],"key":"UA8BLgeSNH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dask use ‘Client’ as well, thus pystac_client  is renamed","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WqCSt8TnhQ"}],"identifier":"dask-use-client-as-well-thus-pystac-client-is-renamed","label":"Dask use ‘Client’ as well, thus pystac_client  is renamed","html_id":"dask-use-client-as-well-thus-pystac-client-is-renamed","implicit":true,"key":"njdvY5BOlW"}],"key":"HJpqRWLfYf"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\n#import dask.distributed\n\nfrom pystac_client import Client as pystac_client\nfrom odc.stac import configure_rio, stac_load\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\n\nimport pandas as pd\n\nimport warnings\nwarnings.filterwarnings(action='ignore')","key":"kEnfwvq5M3"},{"type":"output","id":"8vdP8p8vkSS7HobWNGsaV","data":[],"key":"vQVwvYEVgn"}],"key":"P7N01hfhIL"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get Dask Client","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GP2jLAQnoO"}],"identifier":"get-dask-client","label":"Get Dask Client","html_id":"get-dask-client","implicit":true,"key":"R4v35fqqq6"}],"key":"NEceMl9uWY"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from dask_gateway import Gateway\ngateway = Gateway()","key":"SGsLGOrvJU"},{"type":"output","id":"d7wYwXtAhOH7j0of27WBX","data":[],"key":"P5xaM6C9bk"}],"key":"jt3s1eYjiZ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cluster_options = gateway.cluster_options()\ncluster_options","key":"dtGxud2KP2"},{"type":"output","id":"GfCwkLJUXS_WVzcKQS6NP","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"db5abc66d120491e92e1e792e10a2669\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"VBox(children=(HTML(value='<h2>Cluster Options</h2>'), GridBox(children=(HTML(value=\"<p style='font-weight: bo…","content_type":"text/plain"}}}],"key":"oo76mCD7p3"}],"key":"O9jrkwpURJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import sys\ncluster_options.env_path = sys.prefix","key":"hIDDAmFB8h"},{"type":"output","id":"KYv24CPRvBAS9dw2zprG3","data":[],"key":"HU6TfmQzOq"}],"key":"Qkn5gCDkhM"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cluster = gateway.new_cluster(cluster_options=cluster_options)\n# cluster = gateway.new_cluster(cluster_options=cluster_options)\ncluster.scale(2)\nclient = cluster.get_client()\nclient","key":"t9MlNqzqTI"},{"type":"output","id":"CYt4ZHptpmIlcfPv2Znrc","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/html":{"content":"<div>\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-192dbbcc-f9aa-11ef-8097-0255ac10003c</p>\n        <table style=\"width: 100%; text-align: left;\">\n\n        <tr>\n        \n            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n            <td style=\"text-align: left;\"><strong>Cluster type:</strong> dask_gateway.GatewayCluster</td>\n        \n        </tr>\n\n        \n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard: </strong> <a href=\"https://hub-otc.eox.at/services/eoxhub-gateway/lampata-test/traefik-dask-gateway/clusters/lampata-test.ec2b960356174684b71d2114828cfb49/status\" target=\"_blank\">https://hub-otc.eox.at/services/eoxhub-gateway/lampata-test/traefik-dask-gateway/clusters/lampata-test.ec2b960356174684b71d2114828cfb49/status</a>\n                </td>\n                <td style=\"text-align: left;\"></td>\n            </tr>\n        \n\n        </table>\n\n        \n\n        \n            <details>\n            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n            <div style='background-color: #f2f2f2; display: inline-block; padding: 10px; border: 1px solid #999999;'>\n  <h3>GatewayCluster</h3>\n  <ul>\n    <li><b>Name: </b>lampata-test.ec2b960356174684b71d2114828cfb49\n    <li><b>Dashboard: </b><a href='https://hub-otc.eox.at/services/eoxhub-gateway/lampata-test/traefik-dask-gateway/clusters/lampata-test.ec2b960356174684b71d2114828cfb49/status' target='_blank'>https://hub-otc.eox.at/services/eoxhub-gateway/lampata-test/traefik-dask-gateway/clusters/lampata-test.ec2b960356174684b71d2114828cfb49/status</a>\n  </ul>\n</div>\n\n            </details>\n        \n\n    </div>\n</div>","content_type":"text/html"},"text/plain":{"content":"<Client: 'tls://172.16.0.116:8786' processes=0 threads=0, memory=0 B>","content_type":"text/plain"}}}],"key":"uEkGJLsCH6"}],"key":"nDUbIKJ1H9"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cluster = gateway.connect(gateway.list_clusters()[0].name)\n\n# cluster.shutdown()\ngateway.list_clusters()\nclient = cluster.get_client()\nclient","key":"BnJCNbpLsk"},{"type":"output","id":"5YPkRpZwSVnQLoP1ZvqrL","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/html":{"content":"<div>\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-8f109ca7-22aa-11f0-8359-0255ac100090</p>\n        <table style=\"width: 100%; text-align: left;\">\n\n        <tr>\n        \n            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n            <td style=\"text-align: left;\"><strong>Cluster type:</strong> dask_gateway.GatewayCluster</td>\n        \n        </tr>\n\n        \n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard: </strong> <a href=\"https://hub-otc.eox.at/services/eoxhub-gateway/lampata-test/traefik-dask-gateway/clusters/lampata-test.43eaf324e6fa46e78cc9d07ed2467ee5/status\" target=\"_blank\">https://hub-otc.eox.at/services/eoxhub-gateway/lampata-test/traefik-dask-gateway/clusters/lampata-test.43eaf324e6fa46e78cc9d07ed2467ee5/status</a>\n                </td>\n                <td style=\"text-align: left;\"></td>\n            </tr>\n        \n\n        </table>\n\n        \n\n        \n            <details>\n            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n            <div style='background-color: #f2f2f2; display: inline-block; padding: 10px; border: 1px solid #999999;'>\n  <h3>GatewayCluster</h3>\n  <ul>\n    <li><b>Name: </b>lampata-test.43eaf324e6fa46e78cc9d07ed2467ee5\n    <li><b>Dashboard: </b><a href='https://hub-otc.eox.at/services/eoxhub-gateway/lampata-test/traefik-dask-gateway/clusters/lampata-test.43eaf324e6fa46e78cc9d07ed2467ee5/status' target='_blank'>https://hub-otc.eox.at/services/eoxhub-gateway/lampata-test/traefik-dask-gateway/clusters/lampata-test.43eaf324e6fa46e78cc9d07ed2467ee5/status</a>\n  </ul>\n</div>\n\n            </details>\n        \n\n    </div>\n</div>","content_type":"text/html"},"text/plain":{"content":"<Client: 'tls://172.16.0.194:8786' processes=2 threads=2, memory=2.00 GiB>","content_type":"text/plain"}}}],"key":"hgoqmKiIGs"}],"key":"HReM4i1TlA"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# import os\n# client.run(os.getenv, 'CONDA_PREFIX')\n","key":"zMdgANrnc1"},{"type":"output","id":"7x1YopnYmssZgpX9JAqxg","data":[],"key":"RHZ1grhZea"}],"key":"tatG8ng2FY"},{"type":"block","kind":"notebook-content","data":{"pycharm":{"name":"#%% md\n"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Set project structure","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QlTV4VrOaX"}],"identifier":"set-project-structure","label":"Set project structure","html_id":"set-project-structure","implicit":true,"key":"Q86zNMPJAK"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The cell below creates a separate folder to save the notebook outputs. This facilitates the reader to inspect inputs/outputs stored within a defined destination folder. Change ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fAL7ppMgJ3"},{"type":"inlineCode","value":"<replace-by-notebook-filename>","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"sRlIRqo0W8"},{"type":"text","value":" with your notebook identifier.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zszB4zbzfX"}],"key":"cB1OJm576N"}],"key":"tIokyPew5J"}],"key":"RZh77dbEHY"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"}},"children":[{"type":"code","lang":"python","executable":true,"value":"notebook_folder = './wildfires-foss4g'\nif not os.path.exists(notebook_folder):\n    os.makedirs(notebook_folder)","key":"Pjx7Jeesmz"},{"type":"output","id":"czxltt0-r09NzD1PzNZJL","data":[],"key":"em6dG7aFDJ"}],"key":"uJdhIurs81"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dmfo2JQdrZ"}],"identifier":"load-data","label":"Load data","html_id":"load-data","implicit":true,"key":"KelS6cndsE"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Load full dataset from original or mirror sources. If the license of the dataset permits, we suggest creating sample data (preprocessed) for the notebook stored in a data repository e.g. Zenodo.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CAs2YbzxB8"}],"key":"ul1a6E6Fp3"}],"key":"WQIiuSLXqt"}],"key":"Sy5W2dxsZO"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"}},"children":[{"type":"code","lang":"python","executable":true,"value":"index_name = 'NBR'\n\nbandnames_dict = {\n    'nir': 'nir',\n    'swir22': 'swir22'\n}\n\nkm2deg = 1.0 / 111\nx, y = (23.9983519, 37.7351433)  # Center point of a query\nr = 4 * km2deg  \nbbox = (x - r, y - r, x + r, y + r)\nzoom = 1\n\ncrs = \"epsg:3857\"  # projection on which the data will be projected\n\n# Normalised Burn Ratio, Lopez Garcia 1991\n# index_dict = {'NBR': lambda ds: (ds.nir - ds.swir22) / (ds.nir + ds.swir22)}\n\ndef calc_nbr(ds):\n    return (ds.nir - ds.swir22) / (ds.nir + ds.swir22)\n\nindex_dict = {'NBR': calc_nbr}\nindex_dict","key":"p6wgnvCMkE"},{"type":"output","id":"4oKN_60OOuWhFWdE23VQ-","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"{'NBR': <function __main__.calc_nbr(ds)>}","content_type":"text/plain"}}}],"key":"czDRaLXZcQ"}],"key":"Z4vdQAxUUp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Show location on a map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BITKWk4jLn"}],"identifier":"show-location-on-a-map","label":"Show location on a map","html_id":"show-location-on-a-map","implicit":true,"key":"OIrK7VORZ3"}],"key":"vStMIIw16K"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(1, figsize=[15, 10])\n\n# We're using cartopy and are plotting in PlateCarree projection \n# (see documentation on cartopy)\nax = plt.subplot(1, 1, 1, projection=ccrs.PlateCarree())\nax.set_extent([15.5, 27.5, 36, 41], crs=ccrs.PlateCarree()) # lon1 lon2 lat1 lat2\nax.coastlines(resolution='10m')\nax.gridlines(draw_labels=True)\nax.add_feature(cfeature.OCEAN)\nax.add_feature(cfeature.LAND)\n\nplt.plot(x, y,\n         color='magenta', markersize=15, marker='s',\n         transform=ccrs.PlateCarree(),\n         )\n\n# One way to customize your title\nplt.title(\"Map of the area of interest\", fontsize=18)","key":"Xy77VktroP"},{"type":"output","id":"edbC0mJ7Psv8DSP5jV-Ca","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4c18cd496aeb67b0ba157a07868d27f1","path":"/example-viewer/build/4c18cd496aeb67b0ba157a07868d27f1.png"},"text/plain":{"content":"<Figure size 1500x1000 with 1 Axes>","content_type":"text/plain"}}}],"key":"Rt6kJuSATI"}],"key":"ATqtIO7N1R"},{"type":"block","kind":"notebook-content","data":{},"children":[],"key":"Y6YRER9HDb"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"## Open Catalog and get data\n\n## DASK UPDATE***\n    \n# time_range = \"2017-08-17/2022-08-20\"\n\n# catalog = pystac_client.open(\"https://catalog.osc.earthcode.eox.at\")\n# query1 = catalog.search(\n#     datetime=time_range, limit=100,\n#     bbox=bbox,\n# )\n# items = list(query1.get_items())\n# items","key":"exYZTot00P"},{"type":"output","id":"DIJA7H7R6gVZ5CzH9T-L_","data":[],"key":"gveKt8v7YQ"}],"key":"A4yvzBAdyb"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Open a catalog\ncatalog = pystac_client.open(\"https://earth-search.aws.element84.com/v1\")\n","key":"JO9laWFmI4"},{"type":"output","id":"46h6wK7a8xvD3tf8i90QS","data":[],"key":"dBwN31luEA"}],"key":"cXqu4NjkyS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Increase computation and try Dask","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lKtmHouvep"}],"identifier":"increase-computation-and-try-dask","label":"Increase computation and try Dask","html_id":"increase-computation-and-try-dask","implicit":true,"key":"MPg0UXVAsM"}],"key":"lmCvCkEgEj"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"zoom=1/2\nchunk={\"y\":100}","key":"Eo0bFQiFvs"},{"type":"output","id":"7BDlDb673bhQdzly3UYYW","data":[],"key":"dwDMHvHfah"}],"key":"Tzk7Z7rXXb"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Search and get data before the fire","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vrn5UjjXsv"}],"identifier":"search-and-get-data-before-the-fire","label":"Search and get data before the fire","html_id":"search-and-get-data-before-the-fire","implicit":true,"key":"Y7FnV4HrzE"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"time_range contains the period over which data will be searched;","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pZ58FbG8eg"}],"key":"xNmqS5hdM4"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"query contains additional requirements e.g. get data only when the cloud cover is low (< 0.5)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"T8hCxkIRYq"}],"key":"qTcA4i4jeE"}],"key":"zZFPTaSZ98"}],"key":"Tj7ASA05NW"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# prefire data\ntime_range = \"2021-08-10/2021-08-16\"\n\nquery1 = catalog.search(\n    collections=[\"sentinel-2-l2a\"], datetime=time_range, limit=100,\n    bbox=bbox, query={\"eo:cloud_cover\": {\"lt\": 0.5}},\n)\n\nitems = list(query1.get_items())\nprint(f\"Found: {len(items):d} datasets\")\n\nitems_pre = min(items, key=lambda item: item.properties[\"eo:cloud_cover\"])\n\nprefire_ds = stac_load(\n    [items_pre],\n    bands=(\"nir\", \"swir22\"),\n    crs=crs,\n    resolution=  10*zoom,\n    chunks=chunk,  # <-- use Dask\n    groupby=\"datetime\",\n    bbox=bbox,\n)\nprefire_ds","key":"ObEob7VJZZ"},{"type":"output","id":"yoNetcSDMnIum8MKfKiNe","data":[{"name":"stdout","output_type":"stream","text":"Found: 2 datasets\n"},{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"73af5a4bff5344c9777e09b63f4e77eb","path":"/example-viewer/build/73af5a4bff5344c9777e09b63f4e77eb.html"},"text/plain":{"content":"<xarray.Dataset> Size: 13MB\nDimensions:      (y: 2030, x: 1606, time: 1)\nCoordinates:\n  * y            (y) float64 16kB 4.547e+06 4.547e+06 ... 4.537e+06 4.537e+06\n  * x            (x) float64 13kB 2.667e+06 2.667e+06 ... 2.675e+06 2.675e+06\n    spatial_ref  int32 4B 3857\n  * time         (time) datetime64[ns] 8B 2021-08-13T09:20:07.382000\nData variables:\n    nir          (time, y, x) uint16 7MB dask.array<chunksize=(1, 100, 1606), meta=np.ndarray>\n    swir22       (time, y, x) uint16 7MB dask.array<chunksize=(1, 100, 1606), meta=np.ndarray>","content_type":"text/plain"}}}],"key":"auH7Lt0YiV"}],"key":"xx8HmdYPWe"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Search and get data after the fire","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I3D4uBJay3"}],"identifier":"search-and-get-data-after-the-fire","label":"Search and get data after the fire","html_id":"search-and-get-data-after-the-fire","implicit":true,"key":"DcFhAN9g2B"}],"key":"jJFTs6wSdk"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"},"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"##postfire\ntime_range = \"2021-08-17/2021-08-20\"\n\nquery2 = catalog.search(\n    collections=[\"sentinel-2-l2a\"], datetime=time_range, limit=100,\n    bbox=bbox, query={\"eo:cloud_cover\": {\"lt\": 0.5}},\n)\n\nitems = list(query2.get_items())\nprint(f\"Found: {len(items):d} datasets\")\n\nitems_post = min(items, key=lambda item: item.properties[\"eo:cloud_cover\"])\n\npostfire_ds = stac_load(\n    [items_post],\n    bands=(\"nir\", \"swir22\"),\n    crs=crs,\n    resolution=10 * zoom,\n    chunks=chunk,  # <-- use Dask\n    groupby=\"datetime\",\n    bbox=bbox,\n)\npostfire_ds","key":"D9FmHeyon1"},{"type":"output","id":"tsXTlZokibA7LcH7W2OLt","data":[{"name":"stdout","output_type":"stream","text":"Found: 2 datasets\n"},{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"0daab4ec37ebb8cddb933f72b01206cc","path":"/example-viewer/build/0daab4ec37ebb8cddb933f72b01206cc.html"},"text/plain":{"content":"<xarray.Dataset> Size: 13MB\nDimensions:      (y: 2030, x: 1606, time: 1)\nCoordinates:\n  * y            (y) float64 16kB 4.547e+06 4.547e+06 ... 4.537e+06 4.537e+06\n  * x            (x) float64 13kB 2.667e+06 2.667e+06 ... 2.675e+06 2.675e+06\n    spatial_ref  int32 4B 3857\n  * time         (time) datetime64[ns] 8B 2021-08-18T09:20:04.400000\nData variables:\n    nir          (time, y, x) uint16 7MB dask.array<chunksize=(1, 100, 1606), meta=np.ndarray>\n    swir22       (time, y, x) uint16 7MB dask.array<chunksize=(1, 100, 1606), meta=np.ndarray>","content_type":"text/plain"}}}],"key":"SeTDukUusy"}],"key":"SYpfAa2gXk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Methodology","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bDP1VZgzWS"}],"identifier":"methodology","label":"Methodology","html_id":"methodology","implicit":true,"key":"q60ksRgWqr"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Add code demonstrating the methodology.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vtysD5jsTd"}],"key":"Hvh04WwJqh"}],"key":"ubCM7LnpkZ"}],"key":"sEPvrqm6Ni"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Rename bands in dataset to use simple names \nbands_to_rename = {\n    a: b for a, b in bandnames_dict.items() if a in prefire_ds.variables\n}\n\n# prefire\nprefire_ds[index_name] = index_dict[index_name](prefire_ds.rename(bands_to_rename) / 10000.0)\n\n# postfire\npostfire_ds[index_name] = index_dict[index_name](postfire_ds.rename(bands_to_rename) / 10000.0)\n","key":"IEIHxZNrWH"},{"type":"output","id":"Xm_sbprgRvTWogCaT5BEk","data":[],"key":"Z49hYdeo1j"}],"key":"BMrDeDjGkn"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# calculate delta NBR\nprefire_burnratio = prefire_ds.NBR.isel(time=0)\npostfire_burnratio = postfire_ds.NBR.isel(time=0)\n\ndelta_NBR = prefire_burnratio - postfire_burnratio\n\ndnbr_dataset = delta_NBR.to_dataset(name='delta_NBR')","key":"bqueCiPGG9"},{"type":"output","id":"vVzv04ZDZJYascHkZXLY9","data":[],"key":"vMhVwJEYYt"}],"key":"gG5KCn3maS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Outputs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z9qhBs4vxP"}],"identifier":"outputs","label":"Outputs","html_id":"outputs","implicit":true,"key":"fsbAeIAudy"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Provide a brief inspection of the methodology outputs and their interpretation","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"w0oYrBCiea"}],"key":"VYOfmtMADC"}],"key":"wffGsIUB3t"}],"key":"toU9EjDK2f"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dnbr_dataset\ndelta_NBR","key":"xPEKFKIoVB"},{"type":"output","id":"CVto841CihD3zejacK0cB","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1f1f1f;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;NBR&#x27; (y: 2030, x: 1606)&gt; Size: 26MB\ndask.array&lt;sub, shape=(2030, 1606), dtype=float64, chunksize=(100, 1606), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * y            (y) float64 16kB 4.547e+06 4.547e+06 ... 4.537e+06 4.537e+06\n  * x            (x) float64 13kB 2.667e+06 2.667e+06 ... 2.675e+06 2.675e+06\n    spatial_ref  int32 4B 3857</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'NBR'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>y</span>: 2030</li><li><span class='xr-has-index'>x</span>: 1606</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-40655e5a-5d5a-4446-92ba-502db7b1440f' class='xr-array-in' type='checkbox' checked><label for='section-40655e5a-5d5a-4446-92ba-502db7b1440f' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(100, 1606), meta=np.ndarray&gt;</span></div><div class='xr-array-data'><table>\n    <tr>\n        <td>\n            <table style=\"border-collapse: collapse;\">\n                <thead>\n                    <tr>\n                        <td> </td>\n                        <th> Array </th>\n                        <th> Chunk </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    <tr>\n                        <th> Bytes </th>\n                        <td> 24.87 MiB </td>\n                        <td> 1.23 MiB </td>\n                    </tr>\n                    \n                    <tr>\n                        <th> Shape </th>\n                        <td> (2030, 1606) </td>\n                        <td> (100, 1606) </td>\n                    </tr>\n                    <tr>\n                        <th> Dask graph </th>\n                        <td colspan=\"2\"> 21 chunks in 25 graph layers </td>\n                    </tr>\n                    <tr>\n                        <th> Data type </th>\n                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        <td>\n        <svg width=\"144\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"94\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"5\" x2=\"94\" y2=\"5\" />\n  <line x1=\"0\" y1=\"11\" x2=\"94\" y2=\"11\" />\n  <line x1=\"0\" y1=\"17\" x2=\"94\" y2=\"17\" />\n  <line x1=\"0\" y1=\"23\" x2=\"94\" y2=\"23\" />\n  <line x1=\"0\" y1=\"29\" x2=\"94\" y2=\"29\" />\n  <line x1=\"0\" y1=\"35\" x2=\"94\" y2=\"35\" />\n  <line x1=\"0\" y1=\"41\" x2=\"94\" y2=\"41\" />\n  <line x1=\"0\" y1=\"47\" x2=\"94\" y2=\"47\" />\n  <line x1=\"0\" y1=\"53\" x2=\"94\" y2=\"53\" />\n  <line x1=\"0\" y1=\"65\" x2=\"94\" y2=\"65\" />\n  <line x1=\"0\" y1=\"70\" x2=\"94\" y2=\"70\" />\n  <line x1=\"0\" y1=\"76\" x2=\"94\" y2=\"76\" />\n  <line x1=\"0\" y1=\"82\" x2=\"94\" y2=\"82\" />\n  <line x1=\"0\" y1=\"88\" x2=\"94\" y2=\"88\" />\n  <line x1=\"0\" y1=\"94\" x2=\"94\" y2=\"94\" />\n  <line x1=\"0\" y1=\"100\" x2=\"94\" y2=\"100\" />\n  <line x1=\"0\" y1=\"106\" x2=\"94\" y2=\"106\" />\n  <line x1=\"0\" y1=\"112\" x2=\"94\" y2=\"112\" />\n  <line x1=\"0\" y1=\"120\" x2=\"94\" y2=\"120\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n  <line x1=\"94\" y1=\"0\" x2=\"94\" y2=\"120\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 94.93596059113301,0.0 94.93596059113301,120.0 0.0,120.0\" style=\"fill:#8B4903A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"47.467980\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1606</text>\n  <text x=\"114.935961\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,114.935961,60.000000)\">2030</text>\n</svg>\n        </td>\n    </tr>\n</table></div></div></li><li class='xr-section-item'><input id='section-27cea0a6-0d9d-463b-b0e9-4ac71c4005f6' class='xr-section-summary-in' type='checkbox'  checked><label for='section-27cea0a6-0d9d-463b-b0e9-4ac71c4005f6' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>4.547e+06 4.547e+06 ... 4.537e+06</div><input id='attrs-9419b487-0e4d-475d-bceb-79749f3bbf55' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9419b487-0e4d-475d-bceb-79749f3bbf55' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0b5b181c-289c-4458-a585-b3b6c9567b66' class='xr-var-data-in' type='checkbox'><label for='data-0b5b181c-289c-4458-a585-b3b6c9567b66' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>metre</dd><dt><span>resolution :</span></dt><dd>-5.0</dd><dt><span>crs :</span></dt><dd>EPSG:3857</dd></dl></div><div class='xr-var-data'><pre>array([4547152.5, 4547147.5, 4547142.5, ..., 4537017.5, 4537012.5, 4537007.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.667e+06 2.667e+06 ... 2.675e+06</div><input id='attrs-331398bb-71aa-4962-b0a5-3be48701a779' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-331398bb-71aa-4962-b0a5-3be48701a779' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3e415627-d726-47d0-b980-c5ce0f096820' class='xr-var-data-in' type='checkbox'><label for='data-3e415627-d726-47d0-b980-c5ce0f096820' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>metre</dd><dt><span>resolution :</span></dt><dd>5.0</dd><dt><span>crs :</span></dt><dd>EPSG:3857</dd></dl></div><div class='xr-var-data'><pre>array([2667472.5, 2667477.5, 2667482.5, ..., 2675487.5, 2675492.5, 2675497.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>3857</div><input id='attrs-700af518-e9ba-44a3-afb7-be8f2e44b7fc' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-700af518-e9ba-44a3-afb7-be8f2e44b7fc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ee6aa917-29ba-4e24-8361-0ad212c74f27' class='xr-var-data-in' type='checkbox'><label for='data-ee6aa917-29ba-4e24-8361-0ad212c74f27' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>spatial_ref :</span></dt><dd>PROJCRS[&quot;WGS 84 / Pseudo-Mercator&quot;,BASEGEOGCRS[&quot;WGS 84&quot;,ENSEMBLE[&quot;World Geodetic System 1984 ensemble&quot;,MEMBER[&quot;World Geodetic System 1984 (Transit)&quot;],MEMBER[&quot;World Geodetic System 1984 (G730)&quot;],MEMBER[&quot;World Geodetic System 1984 (G873)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1150)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1674)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1762)&quot;],MEMBER[&quot;World Geodetic System 1984 (G2139)&quot;],MEMBER[&quot;World Geodetic System 1984 (G2296)&quot;],ELLIPSOID[&quot;WGS 84&quot;,6378137,298.257223563,LENGTHUNIT[&quot;metre&quot;,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[&quot;Greenwich&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433]],ID[&quot;EPSG&quot;,4326]],CONVERSION[&quot;Popular Visualisation Pseudo-Mercator&quot;,METHOD[&quot;Popular Visualisation Pseudo Mercator&quot;,ID[&quot;EPSG&quot;,1024]],PARAMETER[&quot;Latitude of natural origin&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8801]],PARAMETER[&quot;Longitude of natural origin&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8802]],PARAMETER[&quot;False easting&quot;,0,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8806]],PARAMETER[&quot;False northing&quot;,0,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8807]]],CS[Cartesian,2],AXIS[&quot;easting (X)&quot;,east,ORDER[1],LENGTHUNIT[&quot;metre&quot;,1]],AXIS[&quot;northing (Y)&quot;,north,ORDER[2],LENGTHUNIT[&quot;metre&quot;,1]],USAGE[SCOPE[&quot;Web mapping and visualisation.&quot;],AREA[&quot;World between 85.06°S and 85.06°N.&quot;],BBOX[-85.06,-180,85.06,180]],ID[&quot;EPSG&quot;,3857]]</dd><dt><span>crs_wkt :</span></dt><dd>PROJCRS[&quot;WGS 84 / Pseudo-Mercator&quot;,BASEGEOGCRS[&quot;WGS 84&quot;,ENSEMBLE[&quot;World Geodetic System 1984 ensemble&quot;,MEMBER[&quot;World Geodetic System 1984 (Transit)&quot;],MEMBER[&quot;World Geodetic System 1984 (G730)&quot;],MEMBER[&quot;World Geodetic System 1984 (G873)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1150)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1674)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1762)&quot;],MEMBER[&quot;World Geodetic System 1984 (G2139)&quot;],MEMBER[&quot;World Geodetic System 1984 (G2296)&quot;],ELLIPSOID[&quot;WGS 84&quot;,6378137,298.257223563,LENGTHUNIT[&quot;metre&quot;,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[&quot;Greenwich&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433]],ID[&quot;EPSG&quot;,4326]],CONVERSION[&quot;Popular Visualisation Pseudo-Mercator&quot;,METHOD[&quot;Popular Visualisation Pseudo Mercator&quot;,ID[&quot;EPSG&quot;,1024]],PARAMETER[&quot;Latitude of natural origin&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8801]],PARAMETER[&quot;Longitude of natural origin&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8802]],PARAMETER[&quot;False easting&quot;,0,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8806]],PARAMETER[&quot;False northing&quot;,0,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8807]]],CS[Cartesian,2],AXIS[&quot;easting (X)&quot;,east,ORDER[1],LENGTHUNIT[&quot;metre&quot;,1]],AXIS[&quot;northing (Y)&quot;,north,ORDER[2],LENGTHUNIT[&quot;metre&quot;,1]],USAGE[SCOPE[&quot;Web mapping and visualisation.&quot;],AREA[&quot;World between 85.06°S and 85.06°N.&quot;],BBOX[-85.06,-180,85.06,180]],ID[&quot;EPSG&quot;,3857]]</dd><dt><span>GeoTransform :</span></dt><dd>2667470 5 0 4547155 0 -5</dd></dl></div><div class='xr-var-data'><pre>array(3857, dtype=int32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e78ffa8f-c9eb-4d8a-84be-9a4014006d26' class='xr-section-summary-in' type='checkbox'  ><label for='section-e78ffa8f-c9eb-4d8a-84be-9a4014006d26' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-c06a0bb7-0bcb-49ee-a855-58b43ac96fcb' class='xr-index-data-in' type='checkbox'/><label for='index-c06a0bb7-0bcb-49ee-a855-58b43ac96fcb' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([4547152.5, 4547147.5, 4547142.5, 4547137.5, 4547132.5, 4547127.5,\n       4547122.5, 4547117.5, 4547112.5, 4547107.5,\n       ...\n       4537052.5, 4537047.5, 4537042.5, 4537037.5, 4537032.5, 4537027.5,\n       4537022.5, 4537017.5, 4537012.5, 4537007.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=2030))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-0080363e-d97e-4ed5-bf2e-7a7eaa4cf5e6' class='xr-index-data-in' type='checkbox'/><label for='index-0080363e-d97e-4ed5-bf2e-7a7eaa4cf5e6' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([2667472.5, 2667477.5, 2667482.5, 2667487.5, 2667492.5, 2667497.5,\n       2667502.5, 2667507.5, 2667512.5, 2667517.5,\n       ...\n       2675452.5, 2675457.5, 2675462.5, 2675467.5, 2675472.5, 2675477.5,\n       2675482.5, 2675487.5, 2675492.5, 2675497.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=1606))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-4b2595a9-ff26-4457-b816-09306c0eedba' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-4b2595a9-ff26-4457-b816-09306c0eedba' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<xarray.DataArray 'NBR' (y: 2030, x: 1606)> Size: 26MB\ndask.array<sub, shape=(2030, 1606), dtype=float64, chunksize=(100, 1606), chunktype=numpy.ndarray>\nCoordinates:\n  * y            (y) float64 16kB 4.547e+06 4.547e+06 ... 4.537e+06 4.537e+06\n  * x            (x) float64 13kB 2.667e+06 2.667e+06 ... 2.675e+06 2.675e+06\n    spatial_ref  int32 4B 3857","content_type":"text/plain"}}}],"key":"ae7pGaTCVe"}],"key":"qXa3nVwuCY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Zoom on the area","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A6B9FgAJW4"}],"identifier":"zoom-on-the-area","label":"Zoom on the area","html_id":"zoom-on-the-area","implicit":true,"key":"J3JdbPINmu"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"DASK ‘lazy’ computation starts here.  Watchout the Task Stream and Worker CPU usage for following 3 plots!!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wX1pwaaZr9"}],"key":"PElh0MT2Pe"}],"key":"JTtMIt87Aa"}],"key":"g14jyRMYqR"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(1, figsize=[7, 10])\n\n# We're using cartopy and are plotting in PlateCarree projection \n# (see documentation on cartopy)\nax = plt.subplot(1, 1, 1, projection=ccrs.PlateCarree())\n#ax.set_extent([-180, 180, -70, 70], crs=ccrs.PlateCarree()) # lon1 lon2 lat1 lat2\nax.coastlines(resolution='10m')\nax.gridlines(draw_labels=True)\n\n# We need to project our data to the new Orthographic projection and for this we use `transform`.\n# we set the original data projection in transform (here Mercator)\nprefire_burnratio.plot(ax=ax, transform=ccrs.epsg(prefire_burnratio.spatial_ref.values), cmap='RdBu_r',\n                       cbar_kwargs={'orientation':'horizontal','shrink':0.95})\n\n# One way to customize your title\nplt.title( pd.to_datetime(prefire_burnratio.time.values.item()).strftime(\"%d %B %Y\"), fontsize=18)","key":"j1X5s4I1Gw"},{"type":"output","id":"1_ICHbcCp54sn3rfv1ppf","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4f1ce0ec50aa42140cc7c3ae648dbf94","path":"/example-viewer/build/4f1ce0ec50aa42140cc7c3ae648dbf94.png"},"text/plain":{"content":"<Figure size 700x1000 with 2 Axes>","content_type":"text/plain"}}}],"key":"YIgzuP6rhl"}],"key":"B80CXBJ93G"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(1, figsize=[7, 9])\n\n# We're using cartopy and are plotting in PlateCarree projection \n# (see documentation on cartopy)\nax = plt.subplot(1, 1, 1, projection=ccrs.PlateCarree())\n#ax.set_extent([-180, 180, -70, 70], crs=ccrs.PlateCarree()) # lon1 lon2 lat1 lat2\nax.coastlines(resolution='10m')\nax.gridlines(draw_labels=True)\n\n# We need to project our data to the new Orthographic projection and for this we use `transform`.\n# we set the original data projection in transform (here Mercator)\npostfire_burnratio.plot(ax=ax, transform=ccrs.epsg(postfire_burnratio.spatial_ref.values), cmap='RdBu_r',\n                        cbar_kwargs={'orientation':'horizontal','shrink':0.95})\n\n# One way to customize your title\nplt.title( pd.to_datetime(postfire_burnratio.time.values.item()).strftime(\"%d %B %Y\"), fontsize=18)","key":"xoaRsGo8VI"},{"type":"output","id":"St8NgKDss5vE_x1Dkh03V","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fb00d2aac5a6d77e0fce34025a540ec7","path":"/example-viewer/build/fb00d2aac5a6d77e0fce34025a540ec7.png"},"text/plain":{"content":"<Figure size 700x900 with 2 Axes>","content_type":"text/plain"}}}],"key":"QU2D3GrByA"}],"key":"Kqm1X1o8Q4"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(1, figsize=[7, 10])\n\n# We're using cartopy and are plotting in PlateCarree projection \n# (see documentation on cartopy)\nax = plt.subplot(1, 1, 1, projection=ccrs.PlateCarree())\nax.coastlines(resolution='10m')\nax.gridlines(draw_labels=True)\n\n# We need to project our data to the new Orthographic projection and for this we use `transform`.\n# we set the original data projection in transform (here Mercator)\ndnbr_dataset.delta_NBR.plot(ax=ax, transform=ccrs.epsg(dnbr_dataset.delta_NBR.spatial_ref.values), cmap='RdBu_r',\n                            cbar_kwargs={'orientation':'horizontal','shrink':0.95})\n\n# One way to customize your title\nplt.title( \"Delta NBR\", fontsize=18)","key":"jnIfPbYtnd"},{"type":"output","id":"rXt1MgnDeXTJ6Trdovoql","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1f5bbe22aab95c6ec8b7b06d42ca8752","path":"/example-viewer/build/1f5bbe22aab95c6ec8b7b06d42ca8752.png"},"text/plain":{"content":"<Figure size 700x1000 with 2 Axes>","content_type":"text/plain"}}}],"key":"yXguZN7DYl"}],"key":"pfhnkB1Exs"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Save Dataset as .zarr","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oarTz4mL44"}],"identifier":"save-dataset-as-zarr","label":"Save Dataset as .zarr","html_id":"save-dataset-as-zarr","implicit":true,"key":"muJA3tcXMu"}],"key":"yqPy5QB5Cl"},{"type":"block","kind":"notebook-code","data":{"pycharm":{"name":"#%%\n"},"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define the output path within your notebook folder\noutput_path = os.path.join(notebook_folder, \"dnbr_dataset.zarr\")\n\n# Because your dataset is lazy (using Dask), it may not have computed all values before the write is attempted. Try computing the dataset explicitly before saving:\n# This ensures that all lazy operations are materialized in memory, which can sometimes resolve issues with missing metadata.\ndnbr_dataset = dnbr_dataset.compute()\n\n# save\ndnbr_dataset.to_zarr(output_path, mode=\"w\")\n\n\n","key":"pd9cWxgo8Z"},{"type":"output","id":"8oc4gmmIxQ6dYUs6bJ_ui","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"<xarray.backends.zarr.ZarrStore at 0x7f0ab3756830>","content_type":"text/plain"}}}],"key":"Nyg3ZN32Se"}],"key":"BQRSkNtNg7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# import os\n# import xarray as xr\n\n# # Define the folder where your Zarr store is saved\n# notebook_folder = './wildfires-foss4g'\n# zarr_path = os.path.join(notebook_folder, \"dnbr_dataset.zarr\")\n\n# # Use the same chunking scheme as before\n# chunk = {\"y\": 100}\n\n# # Open the Zarr store as a Dask-backed xarray.Dataset\n# dnbr_ds = xr.open_zarr(zarr_path, chunks=chunk)\n\n# dnbr_ds","key":"ryXW1JZeSK"},{"type":"output","id":"1ceMbg5E03Sljp2JSqRvu","data":[],"key":"eyLGnKJdYO"}],"key":"h1ZMJqSCCV"}],"key":"O6UFcPWOlf"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Euro Data Cube notebooks","url":"/external-notebooks/eoxhub-workspaces/eoxhub-notebooks/readme","group":"Eoxhub Notebooks"},"next":{"title":"Jupyter notebooks","url":"/external-notebooks/eurodatacube/notebooks/readme","group":"Notebooks"}}},"domain":"http://localhost:3000"}